import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors

data = {
    'Zn':  [0.51, 1.28, 0.24, 0.56, 2.09, 0.49, 0.94, 1.21, 0.25, 0.67, 3.45, 1.45],
    'Pb':  [2.5, 2.24, 1.12, 3.64, 3.45, 0.58, 1.96, 3.48, 0.57, 1.15, 1.44, 4.52],
    'Hg':  [0.74, 1.22, 0.00, 2.5, 1.28, 0.00, 0.74, 2.5, 0.00, 0.00, 0.00, 0.5],
    'Cu':  [1.56, 2.4, 1.12, 1.5, 3.42, 1.5, 2.07, 2.57, 1.58, 1.95, 5.09, 2.11],
    'Fe':  [0.53, 0.98, 0.14, 0.74, 1.26, 0.32, 0.32, 0.72, 0.27, 0.12, 0.54, 0.18],
    'Cr':  [-0.54, 1.6, 1.46, 1.31, 2.31, 3.06, 4.99, 6.16, 2.48, 2.42, 5.41, 4.01],
    'Ni':  [-0.11, 0.58, 0.00, 0.47, 1.13, 2.1, 1.87, 2.36, -0.22, -0.46, 3.36, 1.33],
    'Mn':  [0.53, 0.78, 0.09, 0.37, 0.74, 0.15, 0.22, 0.57, -0.04, 0.03, 0.72, 0.03]
}

samples = [f'Sample {i}' for i in range(1, 13)]

df = pd.DataFrame(data, index=samples)

# Мінусові значення замінюємо на 0
df[df < 0] = 0

# Визначаємо межі для градації за Мюллером
levels = [0, 0.0001, 1, 2, 3, 4, 5, 6]

# Пастельна кольорова палітра (0 - білий, далі ніжні відтінки блакитного, зеленого, жовтого, помаранчевого, світло-червоного, червоного)
colors = [
    "#FFFFFF",  # 0 - White (no pollution)
    "#d0f0fd",  # >0 - 1 Pale Blue (weak pollution)
    "#a0d9a0",  # 1 - 2 Light Green
    "#fff3b0",  # 2 - 3 Light Yellow
    "#fcd49f",  # 3 - 4 Light Orange
    "#f6b89f",  # 4 - 5 Light Red-Orange
    "#f28b82"   # 5 - 6 Light Red
]

cmap = mcolors.ListedColormap(colors)
norm = mcolors.BoundaryNorm(levels, cmap.N)

plt.figure(figsize=(12, 8))
ax = sns.heatmap(df, annot=True, fmt=".2f", cmap=cmap, norm=norm, cbar_kws={
    'ticks': levels[:-1],
    'label': 'Igeo Pollution Level'
})

cbar = ax.collections[0].colorbar
cbar.set_ticks(levels[:-1])
cbar.set_ticklabels([
    'No Pollution (0)',
    'Weak Pollution (0–1)',
    'Moderate Pollution (1–2)',
    'Moderately Strong Pollution (2–3)',
    'Strong Pollution (3–4)',
    'Strong to Very Strong Pollution (4–5)',
    'Very Strong Pollution (5–6)'
])

ax.set_xlabel('Metals', fontsize=14)
ax.set_ylabel('Samples', fontsize=14)
ax.tick_params(axis='both', which='major', labelsize=12)
cbar.ax.tick_params(labelsize=12)
cbar.set_label('Igeo Pollution Level', fontsize=14)

plt.title('Heatmap of Igeo Values According to Müller\'s Classification', fontsize=16)
plt.tight_layout()
plt.show()
